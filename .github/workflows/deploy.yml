name: Test, Coverage and Deploy backend Api_gateaway

on:
  push:
    branches: [main] # ou "master" si c'est ta branche par dÃ©faut

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles(format('{0}/package-lock.json', 'v2')) }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        run: npm install

      - name: Run tests with coverage
        run: npm run test:coverage

  docker-build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push api_gateaway Docker image
        run: |
          docker build -t mydockerhubuser/api_gateaway:latest ./api_gateaway
          docker push mydockerhubuser/api_gateaway:latest

  deploy:
    needs: docker-build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      #- name: Deploy to server via SSH
       # uses: appleboy/ssh-action@v0.1.9
       # with:
          #host: ${{ secrets.SERVER_HOST }}
         # username: ${{ secrets.SERVER_USER }}
         # key: ${{ secrets.SERVER_SSH_KEY }}
         # port: ${{ secrets.SERVER_SSH_PORT }}
         # script: |
          #  cd ~/my-backend-project
           # docker-compose pull
          #  docker-compose up -d --remove-orphans

      # ðŸš€ DÃ©ploiement
      - name: Deploy app and coverage to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .
